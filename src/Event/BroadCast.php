<?php
/**
 * Created by PhpStorm.
 * User: zhaoweijie
 * Date: 2018-12-21
 * Time: 16:54
 */

namespace Zwei\Kafka\Event;


use Zwei\Kafka\Config\BroadCastConfig;
use Zwei\Kafka\Consumer\BroadCast\BroadCastAbstract;
use Zwei\Kafka\Exceptions\Config\BroadCastConfigException;
use Zwei\Kafka\Exceptions\ConfigException;
use Zwei\Kafka\Exceptions\ProducerConfigException;
use Zwei\Kafka\Producer\ProducerAbstract;


/**
 * 消费者广播
 *
 * Class Producer
 * @package Zwei\Kafka\Event
 */
class BroadCast extends CommonBaseAbstract
{
    /**
     * 获取某个广播配置
     *
     * @param string $name
     * @return array
     * @throws BroadCastConfigException
     */
    public function getSingleInstanceConfig($name)
    {
        if (!isset($this->config[$name])) {
            throw new BroadCastConfigException('broadcast name not config');
        }
        return $this->config[$name];
    }

    /**
     * 获取某个广播配置下某个键的值
     * @param string $name 生产者名
     * @param string $key 生产者键
     * @return mixed
     * @throws BroadCastConfigException
     */
    public function getSingleInstanceConfigKey($name, $key)
    {
        $currentConfig = $this->getSingleInstanceConfig($name);
        if (!isset($currentConfig[$key])) {
            $exceptionMsg = sprintf("% broadcast not config key %", $name, $key);
            throw new BroadCastConfigException($exceptionMsg);
        }
        return $currentConfig[$key];
    }

    /**
     * 获取广播新的实例
     *
     * @param string $name
     * @return BroadCastAbstract
     * @throws BroadCastConfigException
     */
    public function getNewInstance($name)
    {
        $class  = $this->getSingleInstanceConfigKey($name, self::CONFIG__KEY_CLASS);
        $config = $this->getSingleInstanceConfig($name);
        /* @var $class BroadCastAbstract */
        return new $class($name, $config);
    }

    /**
     * 获取实例[没有就创建, 否则就从缓存中获取]
     * @param string $name
     * @return BroadCastAbstract
     * @throws BroadCastConfigException
     * @throws ConfigException
     */
    public function getInstance($name)
    {
        return parent::getInstance($name); // TODO: Change the autogenerated stub
    }

}