<?php
/**
 * Created by PhpStorm.
 * User: zhaoweijie
 * Date: 2018-12-21
 * Time: 16:54
 */

namespace Zwei\Kafka;


use Zwei\Kafka\CommonBaseAbstract;
use Zwei\Kafka\Config\ClusterConfig;
use Zwei\Kafka\Exceptions\BaseException;
use Zwei\Kafka\Exceptions\ConfigException;
use Zwei\Kafka\Exceptions\ProducerConfigException;
use Zwei\Kafka\Producer\ProducerAbstract;


/**
 * 事件生产者
 *
 * Class Producer
 * @package Zwei\Kafka
 */
class Producer extends CommonBaseAbstract
{
    /**
     * 获取某个生产者配置
     *
     * @param string $name
     * @return array
     * @throws ProducerConfigException
     */
    public function getSingleInstanceConfig($name)
    {
        if (!isset($this->config[$name])) {
            throw new ProducerConfigException('product name not config');
        }
        return $this->config[$name];
    }

    /**
     * 获取某个生产者配置下某个键的值
     * @param string $name 生产者名
     * @param string $key 生产者键
     * @return mixed
     * @throws ProducerConfigException
     */
    public function getSingleInstanceConfigKey($name, $key)
    {
        $currentConfig = $this->getSingleInstanceConfig($name);
        if (!isset($currentConfig[$key])) {
            $exceptionMsg = sprintf("% producer not config key %", $name, $key);
            throw new ProducerConfigException($exceptionMsg);
        }
        return $currentConfig[$key];
    }

    /**
     * 获取生产者新的实例
     *
     * @param string $name 生产者名
     * @return ProducerAbstract
     * @throws ProducerConfigException
     */
    public function getNewInstance($name)
    {
        $cluster        = $this->getSingleInstanceConfigKey($name, self::CONFIG__KEY_CLUSTER);
        $class          = $this->getSingleInstanceConfigKey($name, self::CONFIG__KEY_CLASS);
        $topics         = $this->getSingleInstanceConfigKey($name, self::CONFIG_KEY_TOPICS);
        $options        = $this->getSingleInstanceConfigKey($name, self::CONFIG_KEY_OPTIONS);
        $brokLists      = ClusterConfig::getValue($cluster);
        /* @var $class ProducerAbstract */
        return new $class($brokLists, $topics, $options);
    }

    /**
     * 获取实例[没有就创建, 否则就从缓存中获取]
     * @param string $name
     * @return ProducerAbstract
     * @throws ProducerConfigException
     */
    public function getInstance($name)
    {
        return parent::getInstance($name); // TODO: Change the autogenerated stub
    }

}